// Code generated by goctl. DO NOT EDIT!
// Source: entry.proto

package server

import (
	"context"

	"github.com/jasonzou/zRPC/internal/logic"
	"github.com/jasonzou/zRPC/internal/svc"
	"github.com/jasonzou/zRPC/pb/zRPC"
)

type EntryServicesServer struct {
	svcCtx *svc.ServiceContext
	zRPC.UnimplementedEntryServicesServer
}

func NewEntryServicesServer(svcCtx *svc.ServiceContext) *EntryServicesServer {
	return &EntryServicesServer{
		svcCtx: svcCtx,
	}
}

func (s *EntryServicesServer) Insert(ctx context.Context, in *zRPC.Entry) (*zRPC.InsertResponse, error) {
	l := logic.NewInsertLogic(ctx, s.svcCtx)
	return l.Insert(in)
}

func (s *EntryServicesServer) Modify(ctx context.Context, in *zRPC.Entry) (*zRPC.ModifyResponse, error) {
	l := logic.NewModifyLogic(ctx, s.svcCtx)
	return l.Modify(in)
}

func (s *EntryServicesServer) Retrieve(ctx context.Context, in *zRPC.RetrieveRequest) (*zRPC.Entry, error) {
	l := logic.NewRetrieveLogic(ctx, s.svcCtx)
	return l.Retrieve(in)
}

func (s *EntryServicesServer) List(ctx context.Context, in *zRPC.ListRequest) (*zRPC.Entries, error) {
	l := logic.NewListLogic(ctx, s.svcCtx)
	return l.List(in)
}
